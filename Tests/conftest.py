import pytest
import os
import logging
from dotenv import load_dotenv
from Tests.API.api_frame.todo_api import TodoApi

load_dotenv()

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Pytest
def pytest_configure(config):
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(message)s",
        handlers=[
            logging.StreamHandler(),  # –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
            logging.FileHandler("test.log")  # –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
        ]
    )
    logging.info("–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ conftest.py")

# üåê –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è base_url
@pytest.fixture(scope="session")
def get_base_url():
    return os.getenv('BASE_URL')

@pytest.fixture(scope="session")
def get_base_url_ui():
    return os.getenv('BASE_URL_UI')


# üì¶ –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è API-–∫–ª–∏–µ–Ω—Ç–∞
@pytest.fixture()
def get_todo_data(get_base_url):
    return TodoApi(get_base_url)

# üî¢ COUNT –∏–∑ .env
@pytest.fixture(scope="session")
def get_default_count_todo_items() -> int:
    count = os.getenv("DEFAULT_COUNT_TODO_ITEMS", "5")
    try:
        return int(count)
    except ValueError:
        pytest.fail("DEFAULT_COUNT_TODO_ITEMS –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")

# üß≠ Playwright Page
@pytest.fixture()
def page(playwright):
    browser = playwright.chromium.launch(headless=False)
    context = browser.new_context()
    page = context.new_page()
    yield page
    context.close()
    browser.close()